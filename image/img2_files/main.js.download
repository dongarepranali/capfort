// Navigation menu  
$("#home-navigation li").hide();
$(window).scroll(function() {  
  var scroll = $(window).scrollTop();
  if (scroll > 0) {
      $("#home-page-header").addClass("header-scrolled");
      $("#home-navigation li").fadeIn("slow");
  }
  else {
      $("#home-page-header").removeClass("header-scrolled");     
      $("#home-navigation li").fadeOut("slow");
  }
});

// Navigation menu  ends //



(function($){
    $(document).ready(function(){
        // var brands = $('.brand-logo');

        // // $('#load-more-brand').on('click', function(){
        // //     brands.show();
        // // });

        $('.toogle-bar').on('click', function(){
            $('nav.header--nav').addClass('active-nav');
        });

        $('.menu-itmes').on('click', function(){
            $('nav.header--nav').removeClass('active-nav');
        });

        $('.main-menu').on('click', function(){
          $('nav.header--nav').removeClass('active-nav');
      })
    });
})(jQuery);




let brand = document.querySelectorAll(".brand-section")
  
brand.forEach( (element) => {
  let fadeIn = element.querySelectorAll(".gs_reveal .brand-logo");
  let tl3 = gsap.timeline({defaults:{  ease: "Expo.easeInOut",duration:2}})
    .from(fadeIn, {opacity:0, stagger:0.1}, "-=1");
  ScrollTrigger.create({
    trigger:element,
    toggleActions:"play none none reverse",
    animation:tl3,
    start: "10% 40%",
  })
    
})



/* ------------------------------------------------------------------------ *  
4 states per letter: Transparent | Line | Block | Visible.
These states are shuffled for a unique "decode" effect each time.
* ------------------------------------------------------------------------ */

// function decodeText(){
//   var text = document.getElementsByClassName('decode-text')[0];
//   // debug with
//   // console.log(text, text.children.length);

//   // assign the placeholder array its places
//   var state = [];
//   for(var i = 0, j = text.children.length; i < j; i++ ){
//       text.children[i].classList.remove('state-1','state-2','state-3');
//       state[i] = i;
//       $( ".text-animation:nth-child(63)" ).removeClass( "futureblue" );
//       $( ".text-animation:nth-child(64)" ).removeClass( "futureblue" );
//       $( ".text-animation:nth-child(65)" ).removeClass( "futureblue" );
//       $( ".text-animation:nth-child(66)" ).removeClass( "futureblue" );
//       $( ".text-animation:nth-child(67)" ).removeClass( "futureblue" );
//       $( ".text-animation:nth-child(68)" ).removeClass( "futureblue" );
//       $( ".text-animation:nth-child(69)" ).removeClass( "futureblue" );
//       $( ".text-animation:nth-child(70)" ).removeClass( "futureblue" );
//       $( ".text-animation:nth-child(71)" ).removeClass( "futureblue" );
//       $( ".text-animation:nth-child(72)" ).removeClass( "futureblue" );
//       $( ".text-animation:nth-child(73)" ).removeClass( "futureblue" );
//       $( ".text-animation:nth-child(74)" ).removeClass( "futureblue" );
//       $( ".text-animation:nth-child(75)" ).removeClass( "futureblue" );
//       $( ".text-animation:nth-child(76)" ).removeClass( "futureblue" );
//       $( ".text-animation:nth-child(77)" ).removeClass( "futureblue" );
//       $( ".text-animation:nth-child(78)" ).removeClass( "futureblue" );
//   }

//   // shuffle the array to get new sequences each time
//   var shuffled = shuffle(state);

//   for(var i = 0, j = shuffled.length; i < j; i++ ){
//       var child = text.children[shuffled[i]];
//       classes = child.classList;

//       // fire the first one at random times
//       var state1Time = Math.round( Math.random() * (2000 - 300) ) + 50;
//       if(classes.contains('text-animation')){ 
//           setTimeout(firstStages.bind(null, child), state1Time);
          
//       }
//   }
  
// }

// send the node for later .state changes
// function firstStages(child){
//   if( child.classList.contains('state-2') ){   
//       child.classList.add('state-3');
      
//   } else if( child.classList.contains('state-1') ){
//       child.classList.add('state-2');
      
//   } else if( !child.classList.contains('state-1') ){
//       child.classList.add('state-1');
      
//       setTimeout(secondStages.bind(null, child), 100);
      
//   }    
// }
// function secondStages(child){
//   if( child.classList.contains('state-1') ){
//       child.classList.add('state-2')
//       setTimeout(thirdStages.bind(null, child), 100);
      
//   } 
//   else if( !child.classList.contains('state-1') )
//   {
//       child.classList.add('state-1');
      
//   }
// }
// function thirdStages(child){
//   if( child.classList.contains('state-2') ){
//       child.classList.add('state-3');
//       $( ".text-animation:nth-child(63)" ).addClass( "futureblue" );
//       $( ".text-animation:nth-child(64)" ).addClass( "futureblue" );
//       $( ".text-animation:nth-child(65)" ).addClass( "futureblue" );
//       $( ".text-animation:nth-child(66)" ).addClass( "futureblue" );
//       $( ".text-animation:nth-child(67)" ).addClass( "futureblue" );
//       $( ".text-animation:nth-child(68)" ).addClass( "futureblue" );
//       $( ".text-animation:nth-child(69)" ).addClass( "futureblue" );
//       $( ".text-animation:nth-child(70)" ).addClass( "futureblue" );
//       $( ".text-animation:nth-child(71)" ).addClass( "futureblue" );
//       $( ".text-animation:nth-child(72)" ).addClass( "futureblue" );
//       $( ".text-animation:nth-child(73)" ).addClass( "futureblue" );
//       $( ".text-animation:nth-child(74)" ).addClass( "futureblue" );
//       $( ".text-animation:nth-child(75)" ).addClass( "futureblue" );
//       $( ".text-animation:nth-child(76)" ).addClass( "futureblue" );
//       $( ".text-animation:nth-child(77)" ).addClass( "futureblue" );
//       $( ".text-animation:nth-child(78)" ).addClass( "futureblue" );
      
//   }
// }

// function shuffle(array) {
//   var currentIndex = array.length, temporaryValue, randomIndex;

//   // While there remain elements to shuffle...
//   while (0 !== currentIndex) {
//       // Pick a remaining element...
//       randomIndex = Math.floor(Math.random() * currentIndex);
//       currentIndex -= 1;

//       // And swap it with the current element.
//       temporaryValue = array[currentIndex];
//       array[currentIndex] = array[randomIndex];
//       array[randomIndex] = temporaryValue;
      
//   }
//   return array;
// }




